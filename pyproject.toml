[build-system]
requires = ["setuptools>=45.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "bookverse-platform"
version = "0.1.0"
description = "Platform aggregation and tagging services for BookVerse"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "BookVerse Team", email = "team@bookverse.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: FastAPI",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
]
dependencies = [
    "fastapi>=0.100.0",
    "uvicorn[standard]>=0.30.0",
    "pydantic>=2.5.0",
    "python-jose[cryptography]>=3.3.0",
    "python-multipart>=0.0.9",
    "requests>=2.31.0",
    "PyYAML>=6.0.1",
    "httpx>=0.27.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.2",
    "pytest-cov>=5.0.0",
    "pytest-asyncio>=0.23.0",
    "black>=24.0.0",
    "isort>=5.13.0",
    "flake8>=7.0.0",
    "mypy>=1.8.0",
    "httpx>=0.27.0",
]

[project.scripts]
# CLI tools
bookverse-platform-aggregator = "app.main:main"
bookverse-platform-rollback = "scripts.apptrust_rollback:main"
bookverse-platform-semver = "scripts.semver_versioning:main"
# Web service
bookverse-platform-tagging = "app.tagging_service:main"

[project.urls]
Homepage = "https://github.com/bookverse/bookverse-platform"
Repository = "https://github.com/bookverse/bookverse-platform"
Issues = "https://github.com/bookverse/bookverse-platform/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["app*", "scripts*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
    "--cov-fail-under=30",
]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
